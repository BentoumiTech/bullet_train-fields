{"version":3,"file":"fields.modern.js","sources":["../../javascript/controllers/fields/button_toggle_controller.js","../../javascript/controllers/fields/cloudinary_image_controller.js"],"sourcesContent":["import { Controller } from \"stimulus\"\n\nexport default class extends Controller {\n  static targets = [ \"shadowField\" ]\n\n  clickShadowField(event) {\n    // we have to stop safari from doing what we originally expected.\n    event.preventDefault();\n\n    // then we need to manually click the hidden checkbox or radio button ourselves.\n    this.shadowFieldTarget.click()\n  }\n}","import { Controller } from \"stimulus\"\n\nexport default class extends Controller {\n  static targets = [ \"uploadButton\", \"hiddenField\", \"thumbnail\" ]\n  static values = { \n    signaturesUrl: String,\n    height: Number,\n    width: Number,\n    cloudName: String,\n    apiKey: String,\n    googleApiKey: String,\n    urlFormat: String,\n    sources: String,\n    searchByRights: Boolean\n  }\n  static classes = [ \"thumbnailShown\" ]\n\n  pickImageAndUpload(event) {\n    // don't submit the form.\n    event.preventDefault()\n\n    // prepare the list of default sources a user can upload an image from.\n    var defaultSources = ['local', 'url', 'camera']\n    if (this.hasGoogleApiKeyValue) {\n      defaultSources.push('image_search')\n    }\n\n    // configure cloudinary's uploader's options.\n    // many of these are configurable at the point where the `shared/fields/cloudinary_image` partial is included.\n    var options = {\n      cloud_name: this.cloudNameValue,\n      apiKey: this.apiKeyValue,\n      upload_preset: this.uploadPresetValue,\n      upload_signature: this.getCloudinarySignature.bind(this),\n      multiple: false,\n      sources: this.hasSourcesValue ? this.sourcesValue.split(',') : defaultSources,\n      search_by_rights: this.hasSearchByRightsValue && this.searchByRightsValue === false ? false : true // default to true.\n    }\n    \n    if (this.hasGoogleApiKeyValue) {\n      options['google_api_key'] = this.googleApiKeyValue\n    }\n    \n    // open cloudinary's upload widget.\n    cloudinary.openUploadWidget(options, this.handleWidgetResponse.bind(this))\n  }\n  \n  clearImage(event) {\n    // don't submit the form.\n    event.preventDefault()\n\n    // clear the cloudinary id.\n    this.hiddenFieldTarget.value = null\n    \n    // remove any existing image from the button.\n    this.removeThumbnail()\n  }\n  \n  getCloudinarySignature(callback, paramsToSign) {\n    $.ajax({\n      url: this.signaturesUrlValue,\n      type: \"GET\",\n      dataType: \"text\",\n      data: {data: paramsToSign},\n      complete: function() { console.log(\"complete\") },\n      success: function(signature, textStatus, xhr) { callback(signature) },\n      error: function(xhr, status, error) { console.log(xhr, status, error) }\n    })\n  }\n  \n  handleWidgetResponse(error, response) {\n    // after the user has successfully uploaded a single file ..\n    if (!error && response && response.event === \"success\") { \n      const data = response.info\n      \n      // update the cloudinary id field in the form.\n      this.hiddenFieldTarget.value = data.public_id\n\n      // remove any existing image.\n      this.removeThumbnail()\n\n      // generate a new image preview url.\n      this.addThumbnail(this.urlFormatValue.replace('CLOUDINARY_ID', data.public_id))\n    }\n  }\n  \n  addThumbnail(url) {\n    var $imageElement = $(`<img src=\"${url}\" width=\"${this.widthValue}\" height=\"${this.heightValue}\" data-${this.identifier}-target=\"thumbnail\" />`)\n    $(this.uploadButtonTarget).prepend($imageElement)\n\n    // mark the image as present.\n    this.uploadButtonTarget.classList.add(this.thumbnailShownClass)\n  }\n  \n  removeThumbnail() {\n    if (!this.hasThumbnailTarget) { return }\n    this.uploadButtonTarget.removeChild(this.thumbnailTarget)\n    this.uploadButtonTarget.classList.remove(this.thumbnailShownClass)\n  }\n}\n"],"names":["Controller","clickShadowField","event","preventDefault","this","shadowFieldTarget","click","targets","pickImageAndUpload","defaultSources","hasGoogleApiKeyValue","push","options","cloud_name","cloudNameValue","apiKey","apiKeyValue","upload_preset","uploadPresetValue","upload_signature","getCloudinarySignature","bind","multiple","sources","hasSourcesValue","sourcesValue","split","search_by_rights","hasSearchByRightsValue","searchByRightsValue","googleApiKeyValue","cloudinary","openUploadWidget","handleWidgetResponse","clearImage","hiddenFieldTarget","value","removeThumbnail","callback","paramsToSign","$","ajax","url","signaturesUrlValue","type","dataType","data","complete","console","log","success","signature","textStatus","xhr","error","status","response","info","public_id","addThumbnail","urlFormatValue","replace","$imageElement","widthValue","heightValue","identifier","uploadButtonTarget","prepend","classList","add","thumbnailShownClass","hasThumbnailTarget","removeChild","thumbnailTarget","remove","values","signaturesUrl","String","height","Number","width","cloudName","googleApiKey","urlFormat","searchByRights","Boolean","classes"],"mappings":"sDAE6BA,EAG3BC,iBAAiBC,GAEfA,EAAMC,iBAGNC,KAAKC,kBAAkBC,WAPlBC,QAAU,CAAE,+BCDQP,EAe3BQ,mBAAmBN,GAEjBA,EAAMC,iBAGN,IAAIM,EAAiB,CAAC,QAAS,MAAO,UAClCL,KAAKM,sBACPD,EAAeE,KAAK,gBAKtB,IAAIC,EAAU,CACZC,WAAYT,KAAKU,eACjBC,OAAQX,KAAKY,YACbC,cAAeb,KAAKc,kBACpBC,iBAAkBf,KAAKgB,uBAAuBC,KAAKjB,MACnDkB,UAAU,EACVC,QAASnB,KAAKoB,gBAAkBpB,KAAKqB,aAAaC,MAAM,KAAOjB,EAC/DkB,kBAAkBvB,KAAKwB,yBAAuD,IAA7BxB,KAAKyB,qBAGpDzB,KAAKM,uBACPE,EAAO,eAAqBR,KAAK0B,mBAInCC,WAAWC,iBAAiBpB,EAASR,KAAK6B,qBAAqBZ,KAAKjB,OAGtE8B,WAAWhC,GAETA,EAAMC,iBAGNC,KAAK+B,kBAAkBC,MAAQ,KAG/BhC,KAAKiC,kBAGPjB,uBAAuBkB,EAAUC,GAC/BC,EAAEC,KAAK,CACLC,IAAKtC,KAAKuC,mBACVC,KAAM,MACNC,SAAU,OACVC,KAAM,CAACA,KAAMP,GACbQ,SAAU,WAAaC,QAAQC,IAAI,aACnCC,QAAS,SAASC,EAAWC,EAAYC,GAAOf,EAASa,IACzDG,MAAO,SAASD,EAAKE,EAAQD,GAASN,QAAQC,IAAII,EAAKE,EAAQD,MAInErB,qBAAqBqB,EAAOE,GAE1B,IAAKF,GAASE,GAA+B,YAAnBA,EAAStD,MAAqB,CACtD,MAAM4C,EAAOU,EAASC,KAGtBrD,KAAK+B,kBAAkBC,MAAQU,EAAKY,UAGpCtD,KAAKiC,kBAGLjC,KAAKuD,aAAavD,KAAKwD,eAAeC,QAAQ,gBAAiBf,EAAKY,aAIxEC,aAAajB,GACX,IAAIoB,EAAgBtB,EAAG,aAAYE,aAAetC,KAAK2D,uBAAuB3D,KAAK4D,qBAAqB5D,KAAK6D,oCAC7GzB,EAAEpC,KAAK8D,oBAAoBC,QAAQL,GAGnC1D,KAAK8D,mBAAmBE,UAAUC,IAAIjE,KAAKkE,qBAG7CjC,kBACOjC,KAAKmE,qBACVnE,KAAK8D,mBAAmBM,YAAYpE,KAAKqE,iBACzCrE,KAAK8D,mBAAmBE,UAAUM,OAAOtE,KAAKkE,yBA9FzC/D,QAAU,CAAE,eAAgB,cAAe,eAC3CoE,OAAS,CACdC,cAAeC,OACfC,OAAQC,OACRC,MAAOD,OACPE,UAAWJ,OACX9D,OAAQ8D,OACRK,aAAcL,OACdM,UAAWN,OACXtD,QAASsD,OACTO,eAAgBC,WAEXC,QAAU,CAAE"}